{"openapi":"3.0.2","info":{"title":"cloudmesh-cc","version":"4.3.7"},"paths":{"/workflows":{"get":{"tags":["workflow"],"summary":"List Workflows","description":"returns a list of all workflows found on local computer\n\ncurl -X 'GET'         'http://127.0.0.1:8000/workflows'         -H 'accept: application/json'\n\nParameters:\n\n- **output**: (str) format to print available workflows, which can be\njson, csv, or none which prints it as dict\n\n:param output: format to print available workflows, which can be\njson, csv, or none which prints it as dict\n:type output: str\n:return: list of workflow names","operationId":"list_workflows_workflows_get","parameters":[{"required":false,"schema":{"title":"Output","type":"string"},"name":"output","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/workflow/upload":{"post":{"tags":["workflow"],"summary":"Upload","description":"upload a workflow to the ~/.cloudmesh/workflow directory for running\nor editing.\n\nParameters:\n\n- **directory**: (str) path to directory with workflow files\n- **archive**: (str) path to archive file, which can be tgx, xz, tar.gz,\nor tar, that contains workflow files\n- **yaml**: (str) path to yaml file that specifies workflow configuration","operationId":"upload_workflow_upload_post","parameters":[{"description":"path to workflow dir that contains scripts and yaml file","required":false,"schema":{"title":"Directory","type":"string","description":"path to workflow dir that contains scripts and yaml file"},"name":"directory","in":"query"},{"description":"path to archive file that can be tgx, xz, tar.gz, or tar","required":false,"schema":{"title":"Archive","type":"string","description":"path to archive file that can be tgx, xz, tar.gz, or tar"},"name":"archive","in":"query"},{"description":"path to yaml file for workflow","required":false,"schema":{"title":"Yaml","type":"string","description":"path to yaml file for workflow"},"name":"yaml","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/workflow/{name}":{"get":{"tags":["workflow"],"summary":"Get Workflow","description":"retrieves a job in a workflow, if specified. if not specified,\nretrieves an entire workflow\n\nParameters:\n\n- **name**: (str) name of workflow to retrieve\n- **job**: (str) name of job to retrieve, if specified (optional)\n- **output**: (str) how to print workflow, which can be\nhtml, graph, json, table, or csv. if not specified, then returned as dict","operationId":"get_workflow_workflow__name__get","parameters":[{"required":true,"schema":{"title":"Name","type":"string"},"name":"name","in":"path"},{"required":false,"schema":{"title":"Job","type":"string"},"name":"job","in":"query"},{"required":false,"schema":{"title":"Output","type":"string"},"name":"output","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["workflow"],"summary":"Delete Workflow","description":"deletes the job in the specified workflow if specified.\nIf the job is not specified, it deletes entire workflow.\n\nParameters:\n\n- **name**: (str) name of workflow to delete\n- **job**: (str) name of job to delete in a workflow, if specified","operationId":"delete_workflow_workflow__name__delete","parameters":[{"required":true,"schema":{"title":"Name","type":"string"},"name":"name","in":"path"},{"required":false,"schema":{"title":"Job","type":"string"},"name":"job","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/workflow/run/{name}":{"get":{"tags":["workflow"],"summary":"Run Workflow","description":"runs a specified workflow according to provided run type\n\nParameters:\n\n- **name**: (str) name of workflow to run\n- **run_type**: (str) how to run workflow. only topo is implemented\n(topological sort of jobs)\n- **redirect**: (str) where to redirect after initializing the run.\nonly graph is implemented for web interface. None will disable redirect\n- **show**: (bool) whether to show the graph as the workflow is run","operationId":"run_workflow_workflow_run__name__get","parameters":[{"required":true,"schema":{"title":"Name","type":"string"},"name":"name","in":"path"},{"required":false,"schema":{"title":"Run Type","type":"string","default":"topo"},"name":"run_type","in":"query"},{"required":false,"schema":{"title":"Redirect","type":"string"},"name":"redirect","in":"query"},{"required":false,"schema":{"title":"Show","type":"boolean","default":false},"name":"show","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/workflow/job/{name_of_workflow}":{"get":{"tags":["workflow"],"summary":"Add Job","description":"adds a node/job to a workflow\n\nA check\nis returned and the user is alerted if arguments are missing\narguments are passed in ATTRIBUTE=VALUE fashion.\nif the name of the workflow is omitted, the default workflow is used.\nIf no job name is specified, an automated number that is kept in the\nconfig.yaml file will be used and the name will be job-n\n\n**Example curl Script**\n\nWe need to have first uploaded workflow-example for this curl to work:\n\ncurl -X 'GET'         'http://127.0.0.1:8000/add-job/workflow-example?job=myJob&user=aPerson&host=local&kind=local&status=ready&script=aJob.sh&progress=0&label=aLabel'         -H 'accept: application/json'\n\nParameters:\n\n- **name_of_workflow**: (str) the name of workflow\n- **job**: (str) the name of the job to add\n- **user**: (str) name of user of the job\n- **host**: (str) name of the host of the job\n- **kind**: (str) the kind of job, like ssh, slurm, local,\n- **status**: (str) the status of the job, such as ready,\n- **script**: (str) the name of the script to be run,\nincluding file extension\n- **exec**: (str) command(s) to execute\n- **progress**: (str) value of job progress from 0 to 100\n- **label**: (str) text to be shown on node in the graph\n- **parent**: (str) parent job\n\n\n:param name_of_workflow: the name of the workflow\n:type name_of_workflow: str\n:param job: the name of the job\n:type job: str\n:param user: name of user of the job\n:type user: str\n:param host: name of the host of the job\n:type host: str\n:param kind: the kind of job, like ssh, slurm, local\n:type kind: str\n:param status: the status of the job, such as ready\n:type status: str\n:param script: the name of the script to be run, including file extension\n:type script: str\n:param exec: command(s) to execute\n:type exec: str\n:param progress: value of job progress from 0 to 100\n:type progress: str\n:param label: text to be shown on node in the graph\n:type label: str\n:param parent: parent job\n:type parent: str\n:return: returns jobs within the specified workflow\n:rtype: dict","operationId":"add_job_workflow_job__name_of_workflow__get","parameters":[{"required":true,"schema":{"title":"Name Of Workflow","type":"string"},"name":"name_of_workflow","in":"path"},{"required":true,"schema":{"title":"Job","type":"string"},"name":"job","in":"query"},{"required":false,"schema":{"title":"User","type":"string"},"name":"user","in":"query"},{"required":false,"schema":{"title":"Host","type":"string"},"name":"host","in":"query"},{"required":false,"schema":{"title":"Kind","type":"string"},"name":"kind","in":"query"},{"required":false,"schema":{"title":"Status","type":"string"},"name":"status","in":"query"},{"required":false,"schema":{"title":"Script","type":"string"},"name":"script","in":"query"},{"required":false,"schema":{"title":"Exec","type":"string"},"name":"exec","in":"query"},{"required":false,"schema":{"title":"Progress","type":"string"},"name":"progress","in":"query"},{"required":false,"schema":{"title":"Label","type":"string"},"name":"label","in":"query"},{"required":false,"schema":{"title":"Parent","type":"string"},"name":"parent","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"HTTPValidationError":{"title":"HTTPValidationError","type":"object","properties":{"detail":{"title":"Detail","type":"array","items":{"$ref":"#/components/schemas/ValidationError"}}}},"ValidationError":{"title":"ValidationError","required":["loc","msg","type"],"type":"object","properties":{"loc":{"title":"Location","type":"array","items":{"anyOf":[{"type":"string"},{"type":"integer"}]}},"msg":{"title":"Message","type":"string"},"type":{"title":"Error Type","type":"string"}}}}}}